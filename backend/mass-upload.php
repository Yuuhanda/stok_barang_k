<?php

include '../database/config.php';

// Check if a file is uploaded
if (isset($_FILES['fileToUpload'])) {
    // Check if the uploaded file is a CSV
    $fileType = mime_content_type($_FILES['fileToUpload']['tmp_name']);
    if ($fileType != 'text/csv') {
        // Not a CSV file, redirect with error
        header("Location: ../admin/item-detail.php?id=" . $_POST['idbarang'] . "&error=3");
        exit();
    }

    // Open and read the CSV file
    if (($handle = fopen($_FILES['fileToUpload']['tmp_name'], 'r')) !== false) {
        // Skip the first line if it contains headers
        $firstRow = true;
        $units = [];

        // Loop through the rows of the CSV file
        while (($data = fgetcsv($handle, 1000, ',')) !== false) {
            if ($firstRow) {
                // Skip header row
                $firstRow = false;
                continue;
            }

            // Assuming CSV columns: 0 = gudang, 1 = nomor_seri
            $id_gudang = trim($data[0]);
            $nomor_seri = trim($data[1]);

            // Redirect if 'gudang' is empty
            if (empty($id_gudang)) {
                fclose($handle);
                header("Location: ../admin/item-detail.php?id=" . $_POST['idbarang'] . "&error=Gudang is empty");
                exit();
            }

            // Auto-generate 'nomor_seri' if empty
            if (empty($nomor_seri)) {
                $nomor_seri = generateSerialNumber($mysqli);  // Pass the $mysqli connection to the function
            }
            // Temporarily store the data
            $units[] = [
                'id_gudang' => $id_gudang,
                'serial_number' => $nomor_seri,
            ];
        }

        fclose($handle);

        
        foreach ($units as $unit) {
            // Check if id_gudang exists in gudang table
            $checkQuery = "SELECT COUNT(*) FROM gudang WHERE id_gudang = :id_gudang";
            $checkStmt = $pdo->prepare($checkQuery);
            $checkStmt->execute([':id_gudang' => $unit['id_gudang']]);
            $exists = $checkStmt->fetchColumn();
        
            if ($exists == 0) {
                // id_gudang does not exist, handle the error
                header("Location: ../admin/item-detail.php?id=" . $_POST['idbarang'] . "&error=Id Gudang does not exist: " . $unit['id_gudang']);
                exit();
            }
        
            // Proceed with the insertion since id_gudang is valid
            $query = "INSERT INTO barang_unit (id_gudang, serial_number, id_barang, id_user, comment, kondisi) VALUES (:id_gudang, :serial_number, :id_barang, :id_user, :comment, :kondisi)";
            $stmt = $pdo->prepare($query);
            $stmt->execute([
                ':id_gudang' => $unit['id_gudang'],
                ':serial_number' => $unit['serial_number'],
                ':id_barang' => $_POST['idbarang'],
                ':id_user' => $_SESSION['id_user'],
                ':comment' => 'Barang Baru',
                ':kondisi' => '0',
            ]);
        }
        
        

        // Redirect after successful processing
        header("Location: ../admin/item-detail.php?id=" . $_POST['idbarang']);
        exit();
    } else {
        // Failed to open file
        header("Location: .../admin/item-detail.php?id=" . $_POST['idbarang'] . "&error=2");
        exit();
    }
} else {
    // No file uploaded, redirect back
    header("Location: ../admin/item-detail.php?id=" . $_POST['idbarang'] . "&error=3");
    exit();
}

// Function to generate a random serial number (or any logic you prefer)
function generateSerialNumber($mysqli) {
    // Ensure that idbarang is set in the POST data
    if (!isset($_POST['idbarang'])) {
        return false; // or handle this as needed
    }

    // Fetch the id_barang from the POST data
    $id_barang = (int)$_POST['idbarang']; // Cast to int to prevent SQL injection

    // Query the database to get the SKU for the item
    $barang_q = $mysqli->query("SELECT sku FROM barang WHERE id_barang = $id_barang");

    if ($barang_q && $barang_q->num_rows > 0) {
        // Fetch the data
        $barang_data = $barang_q->fetch_object();
        // Get the first 4 characters of the SKU
        $sku = substr($barang_data->sku, 0, 4);
        // Ensure that the SKU is in uppercase or as needed
        $sku = strtoupper($sku);

        // Generate a random number between 1 and 1000000
        $random_number = rand(1, 1000000);

        // Ensure that the random number is always 4 digits (e.g., 0001, 0010)
        $random_number = str_pad($random_number, 4, '0', STR_PAD_LEFT);

        // Concatenate SKU and random number to generate serial number
        $autogenerated_sn = $sku . $random_number;

        return $autogenerated_sn;
    } else {
        // If no data is returned, handle the error (e.g., return false or throw an error)
        return false; // Could also log an error or handle as needed
    }
}

